# Criando um chatbot simples

# Importando o m√≥dulo 'os' para execultar comandos do sistema operacional, como limpar tela
import os

# Importando o m√≥dulo 'os' para execultar comandos do sistema operacional, como limpar tela
import time

from clientes import menu_clientes # Importando o Menu clientes

from medicamentos import listar_medicamentos # Dicion√°rio com os rem√©dios


# Fun√ß√£o para limpar a tela do terminal
def limpar_tela():
    #Se o sistema for Windows, usa 'cls', sen√£o usa 'clear' (Linux ou Mac)
    os.system('cls' if os.name == 'nt' else 'clear')




# Fun√ß√£o para exibir mensagens do bot de forma padronizada
def exibir_mensagem(texto):
    print(f"\nBot: {texto}")# Exibe o texto com o prefixo "Bot:" em uma nova liha

# Fun√ß√£o para o setor de Atendimento
def atendimento():
    while True: #Matem o us√∫ario no menu de atendimento at√© ele escolher sair
        limpar_tela() # Limpa a tela a caba exibi√ß√£o do menu, para manter a interface limpa
        print("\nüìû Atendimento")  # Exibe o t√≠tulo do setor
        print("1 - Falar com atendente") # Op√ß√£o 1
        print("2 - Realizar compra online") # Op√ß√£o 2
        print("3 - Voltar ao menu principal") # Op√ß√£o 3

        escolha = input("Escolha uma op√ß√£o: ")  # Captura a escolha do usu√°rio
        
        #Verifica qual foi a escolha do us√∫ario
        if escolha == "1":
            print("Bot: Voc√™ est√° sendo direcionado a um atendente de nossas unidades...")# Resposta para op√ß√£o 1 
        elif escolha == "2":
            listar_medicamentos() # Resposta para op√ß√£o 2
        elif escolha == "3":
            menu_principal()  # Volta ao menu principal
        else:
            limpar_tela() #Limpa a tela antes de mostrar a mensagem de erro
            exibir_mensagem("Op√ß√£o inv√°lida, tente novamente.")# Trata entrada inv√°lida
            time.sleep(2)
            


# Fun√ß√£o para o setor de Entrega
def entrega():
    while True: #Matem o us√∫ario no menu de entrega at√© ele escolher sair
        limpar_tela() # Limpa a tela a caba exibi√ß√£o do menu, para manter a interface limpa
        print("\nüöö Entrega")  # Exibe o t√≠tulo do setor
        print("1 - Acompanhe sua entrega")# Op√ß√£o 1
        print("2 - Voltar ao menu principal")#O p√ß√£o 1

        escolha = input("Escolha uma op√ß√£o: ")  # Captura a escolha do usu√°rio

        if escolha == "1":
            print("Bot: Um link para acompanhar sua entrega ser√° enviado em instantes.")#Resposta para op√ß√£o 1
        elif escolha == "2":
            menu_principal()  # Volta ao menu principal
        else:
            limpar_tela() #Limpa a tela antes de mostrar a mensagem de erro
            exibir_mensagem("Op√ß√£o inv√°lida, tente novamente.")# Trata entrada inv√°lida
            time.sleep(2)
            


# Fun√ß√£o para o setor de Reclama√ß√µes
def reclamacoes():
    limpar_tela() # Limpa a tela a caba exibi√ß√£o do menu, para manter a interface limpa
    print("\n‚ö†Ô∏è Reclama√ß√µes")  # Exibe o t√≠tulo do setor
    print("1 - Reclama√ß√µes sobre mercadoria")# Op√ß√£o 1
    print("2 - Reclama√ß√µes sobre a entrega")# Op√ß√£o 2
    print("3 - Voltar ao menu principal")# Op√ß√£o 3

    escolha = input("Escolha uma op√ß√£o: ")  # Captura a escolha do usu√°rio

    if escolha == "1":
        print("Bot: Voc√™ ser√° redirecionado ao nosso canal de reclama√ß√µes. Por favor, descreva com detalhes seu problema.")#Resposta para op√ß√£o 1
    elif escolha == "2":
        print("Bot: Voc√™ ser√° redirecionado ao nosso canal de reclama√ß√µes. Por favor, descreva com detalhes seu problema.")#Resposta para op√ß√£o 1
    elif escolha == "3":
        menu_principal()  # Volta ao menu principal
    else:
            limpar_tela() #Limpa a tela antes de mostrar a mensagem de erro
            exibir_mensagem("Op√ß√£o inv√°lida, tente novamente.")# Trata entrada inv√°lida
            time.sleep(2)
        

# Fun√ß√£o que exibe o menu principal
def menu_principal():
    while True: #Matem o us√∫ario no menu de atendimento at√© ele escolher sair
        limpar_tela() # Limpa a tela a caba exibi√ß√£o do menu, para manter a interface limpa

        print("\nü§ñ Bem-vindo ao chat da Farm√°cia Viva+!")# Sauda√ß√£o do chatbot
        print("1 - Atendimento")# Op√ß√£o para ir ao menu de atendimento
        print("2 - Cadastro")# Op√ß√£o para ir ao menu de cadastro
        print("3 - Entrega")# Op√ß√£o para ir ao menu de entrega
        print("4 - Reclama√ß√µes")# Op√ß√£o para ir ao menu de reclama√ß√µes
        print("5 - Sair")# Op√ß√£o para encerrar o atendimento

        escolha = input("Digite o n√∫mero do setor desejado: ")# Captura a escolha do usu√°rio

        if escolha == "1":
            atendimento()  # Chama a fun√ß√£o Atendimento
        elif escolha == "2":
            menu_clientes()  # Chama o menu de cadastro
        elif escolha == "3":
            entrega()  # Chama a fun√ß√£o Entrega
        elif escolha == "4":
            reclamacoes()  # Chama a fun√ß√£o Reclama√ß√µes
        elif escolha == "5":
            print("Bot: At√© mais! üëã")  # Mensagem de despedida
            break # Encerra o la√ßo, saindo do programa
        else:
            limpar_tela() #Limpa a tela antes de mostrar a mensagem de erro
            exibir_mensagem("Op√ß√£o inv√°lida, tente novamente.")# Trata entrada inv√°lida
            time.sleep(2)
            


# Inicia o chatbot executando o menu principal
if __name__ == "__main__":
    menu_principal()
